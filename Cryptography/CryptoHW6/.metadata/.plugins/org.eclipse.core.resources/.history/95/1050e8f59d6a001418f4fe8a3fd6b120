package cryptoHW6;

public class Jacobi {

	public static long Jacobi (long a, long b) {
		if(b%2 == 0 || b <= 0) return 616;
		
		if(b == 1) return 1;
		
		a =a%b;
		
		if(a<0)a=a+b; //place a in the range 0 < a < b.
		
		if(a==0)return 0;
		
		if(a==1)return 1;
		
		while(a%4 == 0){a=a/4;}
		
		if(a%2 == 0){
			if(b%8 == 1 || b%8 == 7){return Jacobi(a/2,b);}
			else {return -Jacobi(a/2,b);}
		}
		if(a%4 == 1 || b%4 == 1)return Jacobi(b%a, a); //Reduce b mod a and swap arguments.
		else return -Jacobi(b%a,a);
		}

	}
}
